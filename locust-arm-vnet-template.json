{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clientIp": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "client IP"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "aci-vnet",
            "metadata": {
                "description": "VNet name"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address prefix"
            }
        },
        "subnetAGWAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/25",
            "metadata": {
                "description": "Gateway subnet prefix"
            }
        },
        "subnetAGWName": {
            "type": "string",
            "defaultValue": "gateway",
            "metadata": {
                "description": "Gateway subnet name"
            }
        },
        "subnetACIAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "ACI subnet prefix"
            }
        },
        "subnetACIName": {
            "type": "string",
            "defaultValue": "aci-subnet",
            "metadata": {
                "description": "ACI subnet name"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage Account Name"
            }
        },
        "fileShareName": {
            "type": "string",
            "metadata": {
                "description": "Name of existing file share to be mounted"
            }
        },
        "host": {
            "type": "string",
            "metadata": {
                "description": "URL to test."
            }
        },
        "numberOfInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of instances of Container Group to deploy"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "networkProfileName": "aci-networkprofile",
        "interfaceConfigName": "eth0",
        "interfaceIpConfig": "ipconfigprofile1",
        "publicIPAddressName": "locust-agw-publicip",
        "nsgName": "locust-nsg",
        "applicationGatewayName": "locust-agw",
        "image": "locustio/locust:2.10.1",
        "cpuCores": "1",
        "masterMemoryInGb": "2",
        "clientMemoryInGb": "2",
        "masterContainerGroupName": "locust-master",
        "clientContainerGroupNamePrefix": "locust-worker-",
        "containerName": "locust",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-11-01",
            "name": "[variables('applicationGatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('masterContainerGroupName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetAGWName'))]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_8089",
                        "properties": {
                            "port": 8089
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "aci-master",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', variables('masterContainerGroupName'))).ipAddress.ip]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "locust-http",
                        "properties": {
                            "port": 8089,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "locust-listener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/frontendPorts/port_8089')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "locust-rule",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/httpListeners/locust-listener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/backendAddressPools/aci-master')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/backendHttpSettingsCollection/locust-http')]"
                            }
                        }
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "enableHttp2": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowToApplicationGatewaySubnet",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8089",
                            "sourceAddressPrefix": "[parameters('clientIp')]",
                            "destinationAddressPrefix": "[parameters('subnetAGWAddressPrefix')]",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowGatewayManager",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65535",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "2018-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetAGWName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAGWAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('subnetACIName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetACIAddressPrefix')]",
                            "delegations": [
                                {
                                    "name": "DelegationService",
                                    "properties": {
                                        "serviceName": "Microsoft.ContainerInstance/containerGroups"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkProfileName')]",
            "type": "Microsoft.Network/networkProfiles",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "containerNetworkInterfaceConfigurations": [
                    {
                        "name": "[variables('interfaceConfigName')]",
                        "properties": {
                            "ipConfigurations": [
                                {
                                    "name": "[variables('interfaceIpConfig')]",
                                    "properties": {
                                        "subnet": {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetACIName'))]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "[variables('masterContainerGroupName')]",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "[variables('containerName')]",
                        "properties": {
                            "image": "[variables('image')]",
                            "environmentVariables": [],
                            "resources": {
                                "requests": {
                                    "cpu": "[variables('cpuCores')]",
                                    "memoryInGB": "[variables('masterMemoryInGb')]"
                                }
                            },
                            "ports": [
                                {
                                    "port": 8089
                                },
                                {
                                    "port": 5557
                                }
                            ],
                            "command": [
                                "locust",
                                "--locustfile",
                                "/home/locust/locust/locustfile.py",
                                "--master",
                                "--expect-workers",
                                "[parameters('numberOfInstances')]",
                                "--host",
                                "[parameters('host')]"
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "/home/locust/locust/",
                                    "name": "locust"
                                }
                            ]
                        }
                    }
                ],
                "ipAddress": {
                    "type": "Private",
                    "ports": [
                        {
                            "port": 8089
                        },
                        {
                            "port": 5557
                        }
                    ]
                },
                "osType": "Linux",
                "networkProfile": {
                    "id": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
                },
                "restartPolicy": "OnFailure",
                "volumes": [
                    {
                        "name": "locust",
                        "azureFile": {
                            "shareName": "[parameters('fileShareName')]",
                            "storageAccountName": "[parameters('storageAccountName')]",
                            "storageAccountKey": "[listKeys(variables('storageAccountId'),'2018-02-01').keys[0].value]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "[format('{0}{1:D3}', variables('clientContainerGroupNamePrefix'), copyIndex())]",
            "apiVersion": "2018-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('masterContainerGroupName'))]",
                "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[variables('containerName')]",
                        "properties": {
                            "image": "[variables('image')]",
                            "environmentVariables": [],
                            "resources": {
                                "requests": {
                                    "cpu": "[variables('cpuCores')]",
                                    "memoryInGB": "[variables('clientMemoryInGb')]"
                                }
                            },
                            "ports": [
                                {
                                    "port": 8089
                                },
                                {
                                    "port": 5557
                                }
                            ],
                            "command": [
                                "locust",
                                "--locustfile",
                                "/home/locust/locust/locustfile.py",
                                "--worker",
                                "--master-host",
                                "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', variables('masterContainerGroupName'))).ipAddress.ip]",
                                "--host",
                                "[parameters('host')]"
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "/home/locust/locust",
                                    "name": "locust"
                                }
                            ]
                        }
                    }
                ],
                "osType": "Linux",
                "networkProfile": {
                    "id": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
                },
                "restartPolicy": "OnFailure",
                "volumes": [
                    {
                        "name": "locust",
                        "azureFile": {
                            "shareName": "[parameters('fileShareName')]",
                            "storageAccountName": "[parameters('storageAccountName')]",
                            "storageAccountKey": "[listKeys(variables('storageAccountId'),'2018-02-01').keys[0].value]"
                        }
                    }
                ]
            },
            "copy": {
                "name": "ContainerGroupCopy",
                "count": "[parameters('numberOfInstances')]"
            }
        }
    ],
    "outputs": {
        "locustMonitor": {
            "type": "string",
            "value": "[concat('http://', reference(resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).ipAddress, ':8089')]"
        }
    }
}